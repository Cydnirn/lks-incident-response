# Local .terraform directories
**/.terraform/*
**/.terraform.lock.hcl

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan
*.tfplan.json

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore lock files (optional - some teams prefer to version control this)
# .terraform.lock.hcl

# Ignore any local backup files
*.backup
*.bak

# Ignore any local environment files
.env
.env.local
.env.*.local

# Ignore any local secrets files
secrets.tf
secrets.tfvars

# Ignore any local configuration files
config.local.tf
config.local.tfvars

# Ignore any temporary files
*.tmp
*.temp

# Ignore any log files
*.log

# Ignore any cache directories
.cache/
cache/

# Ignore any IDE specific files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore any OS specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Ignore any backup directories
backup/
backups/

# Ignore any test directories
test/
tests/
*_test.tf

# Ignore any documentation build directories
docs/_build/
site/

# Ignore any local development files
dev/
development/
local/ 